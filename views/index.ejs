<!DOCTYPE html>
<html>
<head>
  <title><%= name %></title>
  <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/vuetify@3.1.5/dist/vuetify.min.css" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
</head>
<body>
  <div id="app" class="" style="background:#010101;" >
    <v-app theme="dark" style="max-width: 900px;" class="pt-5 mx-auto px-5">
      <v-toolbar border density="comfortable" >
        <v-toolbar-title class="text-uppercase"> <%= name%> Election</v-toolbar-title>
        <!-- <v-spacer></v-spacer> -->
        Voter: <%= voter.reg_no%>
        <v-btn @click="logout" icon>
          <v-icon>mdi-export</v-icon>
        </v-btn>
      </v-toolbar>
      <v-alert v-if="alert_msg" class="pa-2" max-height="50px" :text="alert_msg" :type="alert_type" variant="tonal"></v-alert>
      <v-expansion-panels variant="popout" class="my-4">
        <v-expansion-panel
          v-for="(items,i) in election_index"
          :key="i"
          :value="items.office_name"
          v-model="panel"
        >
          <v-expansion-panel-title>Office of the {{items.office_name}}</v-expansion-panel-title>
          <v-expansion-panel-text >
            <v-item-group mandatory v-model="items.voted_aspirant">
              <v-card v-for="asp in items.aspirants" :key="asp.id" class="pa-3 mb-3" variant="tonal">
                <div v-if="!asp._id">No Aspirant in this office</div>
                <v-row>
                  <v-col
                    cols="12"
                    md=""
                  >
                    <v-item :value="asp._id" v-slot="{ isSelected, toggle }">
                      <v-row class="justify-content-space">
                        <v-col cols="12" sm="4" class="ali">
                          <v-flex>
                          <v-avatar
                            :image="asp.avatar"
                            alt="alt img"
                            size="150"
                            class="ma-auto d-flex wrap"
                          ></v-avatar>
                          </v-flex>
                        </v-col>
                        <v-col cols="" sm="8" class="ps-2">
                          <v-sheet class="ma-2 pa-2 ma-auto">
                            <v-card-title class="text-uppercase mb-2">{{asp.first_name}}</v-card-title>
                            <v-row class="py-1">
                              <div col="4" class="mx-5">First name:</div>
                              <div class="font-weight-bold" col="8">{{asp.first_name}}</div>
                            </v-row>
                            <v-row class="py-1">
                              <div col="4" class="mx-5">Other name:</div>
                              <div class="font-weight-bold" col="8">{{asp.other_names}}</div>
                            </v-row>
                            <v-row class="py-1">
                              <div col="4" class="mx-5">Department:</div>
                              <div class="font-weight-bold" col="8">{{asp.department}}</div>
                            </v-row>
                            <v-row class="py-1">
                              <div col="4" class="mx-5">Office:</div>
                              <div class="font-weight-bold" col="8">{{asp.office}}</div>
                            </v-row>
                          </v-sheet>
                        </v-col>
                            <!-- <v-spacer></v-spacer> -->
                      </v-row>
                      <v-col cols="" sm="4">
                        <v-card-actions>
                          <v-spacer></v-spacer>
                          <v-btn prepend-icon="mdi-check-decagram" variant="tonal" class="right" :color="isSelected ? 'green' : ''" @click="toggle" :value="asp._id" >{{isSelected ? 'Voted' : 'Vote'}}</v-btn>
                        </v-card-actions>
                      </v-col>
                    </v-item>
                  </v-col>
                </v-row>
              </v-card>
            </v-item-group>

          </v-expansion-panel-text>
        </v-expansion-panel>
      </v-expansion-panels>
      <v-row class="me-5">
        <v-spacer></v-spacer>
        <v-btn :disabled="isLoading" elevation="5" color="info" class="mt-5 right" @click="submitVotes">{{isLoading ? 'submiting...' : 'submit'}}</v-btn>
      </v-row>
    </v-app>
  </div>
  
  <script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vuetify@3.1.5/dist/vuetify.min.js"></script>
   
  <!-- <script src="/vue/modules/vue.global.prod.js"></script> -->
  <!-- <script src="/vue/modules/vuetify.js"></script> -->
  <script type="module">
    const { createApp } = Vue
    const { createVuetify } = Vuetify
    const vuetify_ = createVuetify()

    const App = {
      components:{},
      data() {
        return {
          // voter:{"reg_no": 20207444841, "id": 1, "_id": "0c53d0a7c2e3ef8f7", "voted": false, "logged_in": false, "createdAt": "2023-02-04T12:45:31.000Z", "updatedAt": "2023-02-04T12:45:31.000Z"},
          alert_msg:'',
          alert_type:'',
          isLoading:false,
          message: 'welcome',
          toggle:'',
          elected_aspirants:[],
          election_index: []
        }
      },
      methods:{
        async fetch_index () {
          const index_data = await (await fetch("<%= process.env.BASE_URL%>/api/index")).json()
          // return console.log(index_data)
          if (index_data.ok) this.election_index = index_data.election_index
        },
        async submitVotes(){
          this.isLoading = true
          for(let offc of this.election_index) {
            if (offc.voted_aspirant) this.elected_aspirants.push(offc.voted_aspirant)
          }
          const req = {
            // "office_ids": [1,3,2],
            aspirant_ids: this.elected_aspirants
          }
          /*07065171308*/
          try {
            const res = await fetch("<%= process.env.BASE_URL%>/api/create-vote/<%= voter._id %>", {
              method: "POST"
              , body: JSON.stringify(req)
              , headers: {
                "content-Type": "application/json",
              }
            })
            const result = await res.json()
            console.log(result)
            if (result.ok) {
              this.isLoading = false
              this.alert_type = 'success'
              this.alert_msg = result.msg
            } else {
              this.isLoading = false
              this.alert_type = 'error'
              this.alert_msg = result.msg
            }
          } catch(e) {
            this.isLoading = false
            this.alert_type = 'warning'
            this.alert_msg = e.message
            console.log("error:",e.message);
          }

          // console.log(this.elected_aspirants)
        },
        async logout(){
          // const res = await fetch("<%= process.env.BASE_URL%>/auth/logout-voter")
          location.assign("<%= process.env.BASE_URL%>/auth/logout-voter")
        }
      },
      created(){
        this.fetch_index()
      }
    }
    const app = createApp(App)
    app.use(vuetify_).mount('#app')
  </script>

</body>
</html>